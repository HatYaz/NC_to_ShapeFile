# for Q? ask : hatem.yazidi@gmail.com
import xarray as xr
import geopandas as gpd
from shapely.geometry import Point
import numpy as np

def netcdf_to_shapefile(netcdf_file, shapefile_output, var_name, lon_name='longitude', lat_name='latitude', time_index=0):
    # Open the NetCDF file
    ds = xr.open_dataset(netcdf_file, engine='netcdf4')

    # Print dataset structure for debugging
    print(ds)

    # Extract latitude, longitude, and variable data
    lon = ds[lon_name].values  # (1333,)
    lat = ds[lat_name].values  # (980,)
    
    # Extract variable and select first time step
    var = ds[var_name].isel(time=time_index).values  # Shape (980, 1333)
    
    # Create 2D grids of lat/lon (1333x980)
    lon_grid, lat_grid = np.meshgrid(lon, lat)

    # Flatten arrays
    lon_flat = lon_grid.flatten()
    lat_flat = lat_grid.flatten()
    var_flat = var.flatten()

    # Filter out invalid points (e.g., NaN values)
    valid_mask = ~np.isnan(var_flat)
    lon_valid = lon_flat[valid_mask]
    lat_valid = lat_flat[valid_mask]
    var_valid = var_flat[valid_mask]

    # Create a GeoDataFrame
    geometry = [Point(lon_valid[i], lat_valid[i]) for i in range(len(lon_valid))]
    gdf = gpd.GeoDataFrame({'value': var_valid}, geometry=geometry, crs='EPSG:4326')

    # Save to shapefile
    gdf.to_file(shapefile_output, driver='ESRI Shapefile')

    print(f"Shapefile saved to {shapefile_output}")

# Correct file paths (use raw strings r"..." to avoid path issues)
input = "Ypur inputr NC file here"
output = "your output shape file name here with *.shp extension"

# Call function
netcdf_to_shapefile(input, output, 'vozocrtx')
